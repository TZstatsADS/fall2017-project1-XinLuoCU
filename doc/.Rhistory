size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()
gg+theme(aspect.ratio = 0.5)
gg+theme(aspect.ratio = 0.3)
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=color),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=1))
gg
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=color),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=3))
gg
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=color),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))
gg
gg+theme(aspect.ratio = 0.5,legend.margin=c(0,0,0,0))
gg+theme(aspect.ratio = 0.5,legend.margin=c(1,1,1,1))
gg+theme(aspect.ratio = 0.5,legend.margin=c(1,0,0,0))
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='cm'))
df<-data.frame(rank1900=1:50,rank2000=order(rank2000),State=StatePop$STATE,
Change=NA,Mean=(rank1900+rank2000)/2)
df$Change<-ifelse(rank1900<rank2000,"increase","decrease")
df$Change[df$rank1900==df$rank2000]="stay"
df$Change=as.factor(df$Change)
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=position_dodge(width=0.9), size=4)
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=position_dodge(width=0.9), size=2,alpha=0.5)
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=position_dodge(width=0.9), size=3,alpha=0.5)
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=position_dodge(width=0.5), size=3,alpha=0.5)
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=Mean, size=3,alpha=0.5)
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=df$Mean, size=3,alpha=0.5)
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
gg<-ggplot(df, aes(x=rank1900, xend=rank2000, y=State, group=State)) +
scale_x_discrete(limits=seq(0,50,by=2))+
geom_dumbbell(aes(col=Change),
size=0.75
) +
coord_flip() +
labs(x="Rank")+
theme_bw()+
theme(axis.text=element_text(size=5))+
geom_text(aes(label=State), position=position_dodge(width=0.5), size=3,alpha=0.5)
gg+theme(aspect.ratio = 0.5,legend.margin=margin(t = 0, unit='mm'))
library(ggplot2movies)
library(ggplot2)
library(gridExtra)
library(dplyr)
movie_data<-movies
p1=ggplot(movie_data,aes(x=budget,y=..density..))+
geom_histogram(color="blue",fill="lightblue",binwidth = 2e+08/30)+
geom_density(col="red")
p2=ggplot(movie_data,aes(" ",budget))+
geom_boxplot()+
coord_flip()
grid.arrange(p1 + ggtitle ("Histogram"),
p2 + ggtitle ("Boxplot"))
movie_data<-movies%>%
filter(!is.na(budget),budget>0)
p1=ggplot(movie_data,aes(x=log(budget),y=..density..))+
geom_histogram(color="blue",fill="lightblue",binwidth = log(2e+08)/30)+
geom_density(col="red")
p2=ggplot(movie_data,aes(" ",log(budget)))+
geom_boxplot()+
coord_flip()
grid.arrange(p1 + ggtitle ("Histogram"),
p2 + ggtitle ("Boxplot"))
movie_data<-movies%>%
select(title,votes,r1:r10)
View(movie_data)
movie_data[,3:12]<-apply(movie_data[,3:12],2,factor)
rate_criterion<-c("4.5"=0.05,"0"=0,"14.5"=0.15,"24.5"=0.25)
g<-ggplot( aes(r1))+geom_bar()+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)))
g<-ggplot( aes(r1))+geom_bar()
g<-ggplot(movie_data, aes(x=r3))+geom_bar(stat = "count")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)))
g
g<-ggplot(movie_data, aes(x=r3))+geom_bar(stat = "count")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)))+
theme(axis.text.y = element_text(x))
x<-c("1-9%","10-19%","20-29%","30-39%","40-49%","50-59%","60-69%","70-79%","80-89%","90-100%")
g<-ggplot(movie_data, aes(x=r3))+geom_bar(stat = "count")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)))+
theme(axis.text.y = element_text(x))
g
g<-ggplot(movie_data, aes(x=r3))+geom_bar(stat = "count")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)))+
theme(axis.text.x = element_text(x))
g
g<-ggplot(movie_data, aes(x=r3))+geom_bar(stat = "count")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
g
View(movie_data)
unique(movie_data$r1)
x<-c("0","1-9%","10-19%","20-29%","30-39%","40-49%","50-59%","60-69%","70-79%","80-89%","90-99%","100%")
g<-ggplot(movie_data, aes(r2))+geom_bar()+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)))
g
g<-ggplot(movie_data, aes(x=r3))+geom_bar(stat = "count")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
g
ggplot(movie_data, aes(r4))+geom_bar()+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r7))+geom_bar(fill="lightblue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r7))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
movie_data<-movies%>%
select(title,votes,r1:r10)
movie_data[,3:12]<-apply(movie_data[,3:12],2,factor)
rate_criterion<-c("4.5"=0.05,"0"=0,"14.5"=0.15,"24.5"=0.25)
x<-c("0","1-9%","10-19%","20-29%","30-39%","40-49%","50-59%","60-69%","70-79%","80-89%","90-99%","100%")
ggplot( aes(r1))+geom_bar(r1)+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
movie_data<-movies%>%
select(title,votes,r1:r10)
movie_data[,3:12]<-apply(movie_data[,3:12],2,factor)
rate_criterion<-c("4.5"=0.05,"0"=0,"14.5"=0.15,"24.5"=0.25)
x<-c("0","1-9%","10-19%","20-29%","30-39%","40-49%","50-59%","60-69%","70-79%","80-89%","90-99%","100%")
ggplot(movie_data, aes(r1))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r2))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(x=r3))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r4))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r5))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r7))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r8))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r9))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r10))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)+
title(main="r6")
ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)+
ggtitle(main="r6")
ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)+
labs(main="r6")
ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)+
labs(aubmain="r6")
movie_data<-movies%>%
select(title,votes,r1:r10)
movie_data[,3:12]<-apply(movie_data[,3:12],2,factor)
rate_criterion<-c("4.5"=0.05,"0"=0,"14.5"=0.15,"24.5"=0.25)
x<-c("0","1-9%","10-19%","20-29%","30-39%","40-49%","50-59%","60-69%","70-79%","80-89%","90-99%","100%")
ggplot(movie_data, aes(r1))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r2))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(x=r3))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r4))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r5))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r7))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r8))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r9))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
ggplot(movie_data, aes(r10))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
grid.arrange(p1,p2,p3,p4,p5 )
movie_data<-movies%>%
select(title,votes,r1:r10)
movie_data[,3:12]<-apply(movie_data[,3:12],2,factor)
rate_criterion<-c("4.5"=0.05,"0"=0,"14.5"=0.15,"24.5"=0.25)
x<-c("0","1-9%","10-19%","20-29%","30-39%","40-49%","50-59%","60-69%","70-79%","80-89%","90-99%","100%")
p1=ggplot(movie_data, aes(r1))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p2=ggplot(movie_data, aes(r2))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p3=ggplot(movie_data, aes(x=r3))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p4=ggplot(movie_data, aes(r4))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p5=ggplot(movie_data, aes(r5))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p6=ggplot(movie_data, aes(r6))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p7=ggplot(movie_data, aes(r7))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p8=ggplot(movie_data, aes(r8))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p9=ggplot(movie_data, aes(r9))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
p10=ggplot(movie_data, aes(r10))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x)
grid.arrange(p1,p2,p3,p4,p5 )
grid.arrange(p1,p2,p3,p4)
p10=ggplot(movie_data, aes(r10))+geom_bar(fill="lightblue",color="blue")+
scale_x_discrete(limits=as.character(c(0,seq(4.5,45.5,by=10),45.5,seq(64.5,100,by=10),100)),
labels=x,cex=0.5)
load("~/Desktop/workspaceR 09:18 16.32.RData")
tidy_lda<-tidy(ldaOut)
setwd("~/Desktop/[ADS]Advanced Data Science/fall2017-project1-XinLuoCU")
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("plyr")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("lda")
library('readr')
library('gdata')
library('wordcloud')
library('tidytext')
library("ggplot2")
library("scales")
library("gridExtra")
source("../lib/plotstacked.R")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
tidy_lda<-tidy(ldaOut)
top_terms <- tidy_lda %>%
group_by(topic) %>%
top_n(6, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms
top_terms %>%
mutate(term = reorder(term, beta)) %>%
group_by(topic, term) %>%
arrange(desc(beta)) %>%
ungroup() %>%
mutate(term = factor(paste(term, topic, sep = "__"),
levels = rev(paste(term, topic, sep = "__")))) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
labs(title = "Top 6 terms in each LDA topic",
x = NULL, y = expression(beta)) +
facet_wrap(~ topic, ncol = 4, scales = "free")
ldaOut.topics <- as.matrix(topics(ldaOut))
ldaOut.topics <- as.matrix(topics(ldaOut))
table(c(1:k, ldaOut.topics))
ldaOut.terms <- as.matrix(terms(ldaOut,20))
topicProbabilities <- as.data.frame(ldaOut@gamma)
terms.beta=ldaOut@beta
terms.beta=scale(terms.beta)#scale the columns
topics.terms=NULL
for(i in 1:k){
topics.terms=rbind(topics.terms, ldaOut@terms[order(terms.beta[i,], decreasing = TRUE)[1:7]])
}
topics.terms
ldaOut.terms
topics.hash=c("Economy", "America", "Defense", "Belief", "Election", "Patriotism", "Unity", "Government", "Reform", "Temporal", "WorkingFamilies", "Freedom", "Equality", "Misc", "Legislation")
corpus.list$ldatopic=as.vector(ldaOut.topics)
corpus.list=corpus.list1
topics.hash=c("Economy", "America", "Defense", "Belief", "Election", "Patriotism", "Unity", "Government", "Reform", "Temporal", "WorkingFamilies", "Freedom", "Equality", "Misc", "Legislation")
corpus.list$ldatopic=as.vector(ldaOut.topics)
corpus.list$ldahash=topics.hash[ldaOut.topics]
colnames(topicProbabilities)=topics.hash
corpus.list.df=cbind(corpus.list, topicProbabilities)
par(mar=c(1,1,1,1))
topic.summary=tbl_df(corpus.list.df)%>%
filter(type%in%c("nomin", "inaug"), File%in%sel)%>%
select(File, Economy:Legislation)%>%
group_by(File)%>%
summarise_each(funs(mean))
topic.summary=as.data.frame(topic.summary)
rownames(topic.summary)=topic.summary[,1]
# [1] "Economy"         "America"         "Defense"         "Belief"
# [5] "Election"        "Patriotism"      "Unity"           "Government"
# [9] "Reform"          "Temporal"        "WorkingFamilies" "Freedom"
# [13] "Equality"        "Misc"            "Legislation"
topic.plot=c(1, 13, 9, 11, 8, 3, 7)
print(topics.hash[topic.plot])
heatmap.2(as.matrix(topic.summary[,topic.plot+1]),
scale = "column", key=F,
col = bluered(100),
cexRow = 0.9, cexCol = 0.9, margins = c(8, 8),
trace = "none", density.info = "none")
lda_gamma <- tidy(ldaOut, matrix = "gamma")
lda_gamma1[,4:6]<-sapply(lda_gamma$document,split_filename)
tidy_lda<-tidy(ldaOut)
top_terms <- tidy_lda %>%
group_by(topic) %>%
top_n(6, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms
top_terms %>%
mutate(term = reorder(term, beta)) %>%
group_by(topic, term) %>%
arrange(desc(beta)) %>%
ungroup() %>%
mutate(term = factor(paste(term, topic, sep = "__"),
levels = rev(paste(term, topic, sep = "__")))) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
labs(title = "Top 6 terms in each LDA topic",
x = NULL, y = expression(beta)) +
facet_wrap(~ topic, ncol = 4, scales = "free")
lda_gamma <- tidy(ldaOut, matrix = "gamma")
lda_gamma1[,4:6]<-sapply(lda_gamma$document,split_filename)
lda_gamma1<-lda_gamma%>%
group_by(document,topic)%>%
summarise(
mean(gamma)
)
ggplot(lda_gamma, aes(gamma)) +
geom_histogram(bins=20) +
scale_y_log10() +
labs(title = "Distribution of probabilities for all topics",
y = "Number of documents", x = expression(gamma))
ggplot(lda_gamma, aes(gamma, fill = as.factor(topic))) +
geom_histogram(show.legend = FALSE) +
facet_wrap(~ topic, ncol = 4) +
scale_y_log10() +
labs(title = "Distribution of probability for each topic",
y = "Number of documents", x = expression(gamma))
ggplot(lda_gamma, aes(gamma)) +
geom_histogram(bins=20) +
scale_y_log10() +
labs(title = "Distribution of probabilities for all topics",
y = "Number of documents", x = expression(gamma))
tidy_lda<-tidy(ldaOut)
top_terms <- tidy_lda %>%
group_by(topic) %>%
top_n(6, beta) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms
top_terms %>%
mutate(term = reorder(term, beta)) %>%
group_by(topic, term) %>%
arrange(desc(beta)) %>%
ungroup() %>%
mutate(term = factor(paste(term, topic, sep = "__"),
levels = rev(paste(term, topic, sep = "__")))) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(show.legend = FALSE) +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) +
labs(title = "Top 6 terms in each LDA topic",
x = NULL, y = expression(beta)) +
facet_wrap(~ topic, ncol = 4, scales = "free")
lda_gamma <- tidy(ldaOut, matrix = "gamma")
#lda_gamma1[,4:6]<-sapply(lda_gamma$document,split_filename)
lda_gamma1<-lda_gamma%>%
group_by(document,topic)%>%
summarise(
mean(gamma)
)
ggplot(lda_gamma, aes(gamma)) +
geom_histogram(bins=20) +
scale_y_log10() +
labs(title = "Distribution of probabilities for all topics",
y = "Number of documents", x = expression(gamma))
ggplot(lda_gamma, aes(gamma, fill = as.factor(topic))) +
geom_histogram(show.legend = FALSE) +
facet_wrap(~ topic, ncol = 4) +
scale_y_log10() +
labs(title = "Distribution of probability for each topic",
y = "Number of documents", x = expression(gamma))
